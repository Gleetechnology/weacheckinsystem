// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id            String   @id @default(cuid())
  username      String   @unique
  password      String
  email         String?  @unique
  profilePicture String?
  firstName     String?
  lastName      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
}

model Attendee {
    id                      String   @id @default(cuid())
    name                    String
    email                   String?  @unique
    phone                   String?
    qrData                  String
    qrCode                  String
    checkedIn               Boolean  @default(false)
    checkedInAt             DateTime?
    createdAt               DateTime @default(now())
    // Original column names from uploaded Excel
    nameCol                 String?
    emailCol                String?
    phoneCol                String?
    // New specific columns from Excel
    attendeeId              String?  // ID
    fullName                String?  // Full Name
    column2                 String?  // 열2
    organization            String?  // Organization
    positionInOrganization  String?  // Position in Organization
    preferredTitle          String?  // Preferred Title (Optional)
    regionOfWork            String?  // Region of Work
    phoneKorean             String?  // 번호
    koreanText              String?  // 한글
    positionKorean          String?  // 직분
    positionEnglish         String?  // 영어직분
    englishText             String?  // 영어
    // All additional columns from Excel (for backward compatibility)
    extraData               String?  // JSON string of additional columns
}

model Notification {
    id          String   @id @default(cuid())
    title       String
    message     String
    type        String   // 'info', 'success', 'warning', 'error'
    read        Boolean  @default(false)
    createdAt   DateTime @default(now())
    adminId     String?  // Optional: link to specific admin if needed
    attendeeId  String?  // Optional: link to attendee if notification is about them

    @@map("notifications")
}

model Setting {
    id          String   @id @default(cuid())
    key         String   @unique
    value       String
    type        String   // 'string', 'number', 'boolean', 'json'
    category    String   // 'general', 'notifications', 'security', etc.
    description String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@map("settings")
}
